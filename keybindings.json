// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "cmd+right",
    "command": "-cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+right",
    "command": "-gitlens.key.ctrl+right",
    "when": "gitlens:key:ctrl+right"
  },
  {
    "key": "cmd+right",
    "command": "-extension.vim_cmd+right",
    "when": "editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "cmd+right",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.showNextWindowTab"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.showPreviousWindowTab"
  },
  {
    "key": "cmd+left",
    "command": "-list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "cmd+left",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+left",
    "command": "-gitlens.key.ctrl+left",
    "when": "gitlens:key:ctrl+left"
  },
  {
    "key": "cmd+left",
    "command": "-extension.vim_cmd+left",
    "when": "editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+left",
    "command": "-cursorHome",
    "when": "textInputFocus"
  },
  // {
  //   "key": "ctrl+p",
  //   "command": "-extension.vim_ctrl+p",
  //   "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  // },
  // {
  //   "key": "ctrl+p",
  //   "command": "-list.focusUp",
  //   "when": "listFocus && !inputFocus"
  // },
  // {
  //   "key": "ctrl+p",
  //   "command": "-selectPrevSuggestion",
  //   "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  // },
  // {
  //   "key": "ctrl+p",
  //   "command": "-cursorUp",
  //   "when": "textInputFocus"
  // },
  // {
  //   "key": "ctrl+p",
  //   "command": "workbench.action.quickOpen"
  // },
  // {
  //   "key": "cmd+p",
  //   "command": "-workbench.action.quickOpen"
  // },
  // {
  //   "key": "ctrl+shift+p",
  //   "command": "workbench.action.showCommands"
  // },
  // {
  //   "key": "shift+cmd+p",
  //   "command": "-workbench.action.showCommands"
  // },
  // {
  //   "key": "ctrl+t",
  //   "command": "workbench.action.showAllSymbols"
  // },
  // {
  //   "key": "cmd+t",
  //   "command": "-workbench.action.showAllSymbols"
  // },
  {
    "key": "ctrl+s",
    "command": "-issue.createIssueFromFile",
    "when": "resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor"
    // "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
  },
  // {
  //   "key": "shift+cmd+f",
  //   "command": "-workbench.action.terminal.searchWorkspace",
  //   "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
  // },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.view.search",
    "when": "workbench.view.search.active"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.view.search",
    "when": "workbench.view.search.active"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeActiveEditor"
  }
  // {
  //   "key": "ctrl+shift+o",
  //   "command": "workbench.action.gotoSymbol"
  // },
  // {
  //   "key": "shift+cmd+o",
  //   "command": "-workbench.action.gotoSymbol"
  // }
]
